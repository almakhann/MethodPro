lists <- c(lists, AirPassengers[i:i+9])
}
AirPassengers[1:144]
lists
AirPassengers <- as.vector(AirPassengers)
for (i in 1:3){
print(AirPassengers[i : i+9])
lists <- c(lists, AirPassengers[i:i+9])
}
AirPassengers[1:10]
while (i<2){
print(AirPassengers[i:i+9])
i = i+1
}
while (i<2){
print(AirPassengers[i:i+9])
i = i+1
}
i=1
while (i<2){
print(AirPassengers[i:i+9])
i = i+1
}
good_month
data <- AirPassengers
aggregate(df[,c(1,3)], by = list(df$vs , df$am), FUN = sd)
df <-  mtcars
aggregate(hp ~ vs , df , mean)
AirPassengers <- as.vector(AirPassengers)
aggregate(AirPassengers[1:10], AirPassengers , mean)
AirPassengers <- as.vector(AirPassengers)
for (i in 1:144){
print(AirPassengers[i : (i+9)])
lists <- c(lists, AirPassengers[i:i+9])
}
lists <- c()
for (i in 1:144){
if ((i+9)<=144) {
lists <- c(lists, AirPassengers[i:i+9])
}
}
lists
for (i in 1:144){
print(AirPassengers[i : (i+9)])
if ((i+9)<=144) {
lists <- c(lists, AirPassengers[i:(i+9)])
}
}
lists
lists <- c()
for (i in 1:144){
print(AirPassengers[i : (i+9)])
if ((i+9)<=144) {
lists <- c(lists, mean(AirPassengers[i:(i+9)]))
}
}
lists
df <-  mtcars
result <- aggregate(x = mtcars$qsec, by = list(mtcars$cyl != 3, mtcars$mpg >20 ))
result <- aggregate(x = mtcars$qsec, by = list(mtcars$cyl != 3, mtcars$mpg >20 ) FUN = mean)
result
result <- aggregate(x = mtcars$qsec, by = list(mtcars$cyl != 3, mtcars$mpg >20 ) FUN = mean)
result <- aggregate(x = mtcars$qsec, by = list(mtcars$cyl != 3, mtcars$mpg >20 ), FUN = mean)
result
df<-  mtcars
library(psych)
describe(x =df)
describe(x = df[, -c(8,9)] )
describe(x = df[-c(8,9),] )
describe(x = df[-c(1,2),] )
describe(x = df[,-c(1,2)] )
descr1 <- describeBy(x = df[, -c(8,9)], group = df$vs, mat = T, digits = 1 )
descr1
describeBy(df$qsec , group = list(df$am, df$vs) , mat = t)
describeBy(df$qsec , group = list(df$am, df$vs) , mat = T)
describeBy(df$qsec , group = list(df$am, df$vs) , mat = T, digits = 1)
#1.5.3
airquality
subset(airquality, month = c(7,8,9))
subset(airquality, month == c(7,8,9))
subset(airquality, Month == c(7,8,9))
aggregate(na.rm(Ozone) ~ subset(airquality, Month == c(7,8,9)), airquality, FUN = length() )
aggregate(na(Ozone) ~ subset(airquality, Month == c(7,8,9)), airquality, FUN = length() )
aggregate(Ozone ~ Month, subset(airquality, Month %in% c(7,8,9)), length )
describeBy(airquality$Wind, group = subset(airquality, Month == 8), type = skew)
#1.5.4
data <- subset(airquality, Month == 8)
describeBy(data$Wind, group = data$Month, type = skew)
describeBy(data$Wind, group = data$Month, type = skew)
describeBy(data$Wind, group = data$Month)
describeBy(airquality$Wind, group = subset(airquality, Month == 8))
describeBy(airquality$Wind, group = airquality$Month)
#1.5.3
airquality
describeBy(airquality$Wind, group = airquality$Month)
iris
sd(iris$Sepal.Length)
#last
?replace
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
fixed_vector <- replace(na.rm = T, my_vector[is.na(my_vector)]   ,mean(my_vector))
fixed_vector <- replace(my_vector,  na.rm = T, mean(my_vector))
fixed_vector <- replace(my_vector,  my_vector[is.na(my_vector)], mean(my_vector))
my_vector
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector[is.na(my_vector)]
mean(my_vector)
mean(my_vector, na.rm = T)
fixed_vector <- replace(my_vector,my_vector[is.na(my_vector)], mean(my_vector, na.rm = T))
my_vector
my_vector[is.na(my_vector)]
mean(my_vector, na.rm = T)
my_vector
my_vector
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
my_vector[is.na(my_vector)]
mean(my_vector, na.rm = T)
replace(my_vector, my_vector[is.na(my_vector)], mean(my_vector, na.rm = T))
fixed_vector <- replace(my_vector, mean(my_vector, na.rm = T), my_vector[is.na(my_vector)])
my_vector <- rnorm(30)
my_vector[sample(1:30, 1)] <- NA
my_vector
replace(my_vector, my_vector[is.na(my_vector)], mean(my_vector, na.rm = T))
my_vector[is.na(my_vector)]
mean(my_vector, na.rm = T)
replace(my_vector, my_vector[is.na(my_vector)], 5)
my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T))
my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T)
my_vector
my_vector <- rnorm(30)
my_vector
my_vector
my_vector[sample(1:30, 10)] <- NA
my_vector
my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T)
my_vector
fixed_vector <- my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T)
fixed_vector <- c()
fixed_vector <- my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T)
fixed_vector <- (my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T))
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
mean <- mean(my_vector, na.rm = T)
fixed_vector <- replace(my_vector, my_vector[is.na(my_vector)], mean)
my_vector
fixed_vector
means <- mean(my_vector, na.rm = T)
fixed_vector <- replace(my_vector, my_vector[is.na(my_vector)], means)
fixed_vector
fixed_vector <- (my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T))
fixed_vector
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
fixed_vector <- (my_vector[is.na(my_vector)] = mean(my_vector, na.rm = T))
fixed_vector
fixed_vector <- (my_vector[is.na(my_vector)] <-  mean(my_vector, na.rm = T))
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
fixed_vector
fixed_vector <- (my_vector[is.na(my_vector)] <-  mean(my_vector, na.rm = T))
fixed_vector
my_vector
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
fixed_vector <- replace(my_vector, my_vector[is.na(my_vector)] ,  mean(my_vector, na.rm = T))
fixed_vector
my_vector
my_vector
fixed_vector <- replace(my_vector, my_vector[is.na(my_vector)] ,  mean(my_vector, na.rm = T))
fixed_vector
my_vector
fixed_vector <- replace(my_vector[is.na(my_vector)] ,  mean(my_vector, na.rm = T))
fixed_vector <- replace(x = my_vector, my_vector[is.na(my_vector)] ,  mean(my_vector, na.rm = T))
fixed_vector
fixed_vector <- replace(x = my_vector,list = my_vector[is.na(my_vector)] ,values =  mean(my_vector, na.rm = T))
fixed_vector
my_vector
my_vector <- rnorm(30)
my_vector[sample(1:30, 10)] <- NA
my_vector
fixed_vector <- replace(my_vector, NA,mean(my_vector, na.rm = T))
fixed_vector
fixed_vector <- replace(my_vector, NA,mean(my_vector, na.rm = T))
my_vector
NA
mean(my_vector, na.rm = T)
fixed_vector <- replace(my_vector, NA, mean(my_vector, na.rm = T))
fixed_vector <- replace(my_vector, NA, 5)
fixed_vector
replace(my_vector, NA, 5)
replace(my_vector, NA, 5)
replace(my_vector, NA, 5)
replace(my_vector, NA, 5)
replace(my_vector, NA, 5)
fixed_vector <- replace(my_vector, c(1), 5)
fixed_vector
fixed_vector <- replace(my_vector,c(my_vector[is.na(my_vector)]) ,mean(my_vector, na.rm = T))
fixed_vector
my_vector
fixed_vector <- replace(my_vector,c(my_vector[is.na(my_vector)]) ,5)
fixed_vector
fixed_vector <- replace(my_vector,c(NA) ,5)
fixed_vector
for i in my_vector {
print(i)
}
for (i in my_vector) {
print(i)
}
replace(my_vector[i], NA, mean(my_vector, na.rm = T))
for (i in my_vector) {
replace(my_vector[i], NA, mean(my_vector, na.rm = T))
}
my_vector
for (i in my_vector) {
replace(my_vector[i], NA, mean(my_vector, na.rm = T))
}
my_vector
for (i in my_vector) {
if(my_vector[is.na(my_vector)])
my_vector[i] = mean(my_vector, na.rm = T)
}
for (i in my_vector) {
if(my_vector[is.na(my_vector)])
my_vector[i] = mean(my_vector, na.rm = T)
}
mean(my_vector, na.rm = T)
mean <- mean(my_vector, na.rm = T)
mean
for (i in my_vector) {
if(my_vector[is.na(my_vector)])
my_vector[i] = mean
}
for (i in my_vector) {
if(my_vector[i] == NA)
my_vector[i] = mean
}
my_vector
for (i in my_vector) {
if(my_vector[i] == NA)
my_vector[i] = mean
}
if(my_vector[i] == my_vector[is.na(my_vector)])
for (i in my_vector) {
if(my_vector[i] == my_vector[is.na(my_vector)])
my_vector[i] = mean
}
replace(my_vector,is.na(my_vector), mean(my_vector, na.rm= T))
data("mtcars")
data("mtcars")
head(mtcars)
hist(mtcars$mpg)
hist(mtcars$mpg, breaks = 20)
hist(mtcars$mpg, breaks = 1
hist(mtcars$mpg, breaks = 1)
hist(mtcars$mpg, breaks = 20)
hist(mtcars$mpg, breaks = 2)
hist(mtcars$mpg, breaks = 2, xlab = "MPG", ylab = "Fr")
boxplot(mpg~am, mtcars)
df <- mtcars
df$am <- factor(df$am, labels = "Autmatic", "Manual")
boxplot(mpg~am, df)
boxplot(mpg~am, df)
df
df$am <- factor(df$am, labels = C("Autmatic", "Manual"))
boxplot(mpg ~ am, df)
df
df$am <- factor(df$am, labels = c("Autmatic", "Manual"))
df <- mtcars
df$am <- factor(df$am, labels = c("Autmatic", "Manual"))
boxplot(mpg ~ am, df)
plot(df$mpg , df$disp)
library(ggplot2)
ggplot(df,aes(x = mpg))
ggplot(df,aes(x = mpg)) + geom_histogram()
ggplot(df,aes(x = mpg)) + geom_histogram(fill = "white", col = 'black')
ggplot(df,aes(x = mpg)) + geom_histogram(fill = "white", col = 'black', binwidth = 20)
ggplot(df,aes(x = mpg)) + geom_histogram(fill = "white", col = 'black', binwidth = 2)
ggplot(df, aes(x = mpg, fill = cyl)) + geom_density()
ggplot(df, aes(x = mpg, fill = cyl)) + geom_dotplot()
ggplot(df, aes(x = mpg, fill = cyl)) + geom_dotplot(fill = df$cyl )
ggplot(df, aes(x = mpg, fill = cyl)) + geom_dotplot(fill = df$cyl, binwidth = 2)
ggplot(df, aes(x = mpg, fill = am)) + geom_dotplot(fill = df$cyl, binwidth = 2)
ggplot(df, aes(x = mpg, fill = am)) + geom_density()
ggplot(df, aes(x = mpg, fill = am)) + geom_density(alpha = 0.2
ggplot(df, aes(x = mpg, fill = am)) + geom_density(alpha = 0.2
ggplot(df, aes(x = mpg, fill = am)) + geom_density(alpha = 0.2)
ggplot(df, aes(x = mpg)) + geom_density(aes(fill= am))
ggplot(df, aes(x = mpg)) + geom_density(aes(fill= am), alpha = 0.3)
ggplot(df, aes(x = mpg, y = disp)) + geom_abline()
ggplot(df, aes(x = mpg, y = disp)) + geom_bar()
ggplot(df, aes(x = mpg, y = hp)) + geom_bar()
ggplot(df, aes(x = mpg, y = hp)) + geom_boxplot()
ggplot(df, aes(x = mpg, y = hp)) + geom_boxplot(aes(fill = am))
ggplot(df, aes(x = mpg, y = hp, col = vs)) + geom_boxplot(aes(fill = am))
ggplot(df , aes(x= mpg, y= hp)) + geom_point()
ggplot(df , aes(x= mpg, y= hp)) + geom_point(size = 6)
ggplot(df , aes(x= mpg, y= hp, col = vs ,size = qsec)) + geom_point()
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point()
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(fill = Ozone)
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(aes(fill = Ozone)
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(aes(fill = Ozone))
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(aes(fill = Ozone))
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(aes(fill = Ozone), size = 6)
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(aes(fill = Ozone), size = 3)
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_point(aes(fill = Ozone), size = 0.5)
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_boxplot(aes(fill = Ozone), size = 0.5)
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_boxplot(aes(fill = Ozone))
ggplot(airquality, aes(x = Month, y = Ozone)) + geom_boxplot()
plot1 <- ggplot(mtcars, aes(x = mpg, y = disp, col = hp)) + geom_scatterplot()
plot1
plot1 <- ggplot(mtcars, aes(x = mpg, y = disp, col = hp)) + geom_scatterplot()
plot1 <- ggplot(mtcars, aes(x = mpg, y = disp, col = hp)) + geom_point()
plot1
boxplot( airquality$Ozone ~ airquality$Month )
df <- read.csv("grants.csv")
str(df)
df$status = factor(df$status, labels = c("Not Funded", "Funded"))
labels(df$status)
View(df)
levels(df$status)
levels(df$status)
t1 <- table(df$status)
t1
t2 <- table(status = df$status, field = df$field)
t2
prop.table(t2)
dim(t2)
t3 <- table(Year = df$years_in_uni, field = df$field, status = df$status)
t3
t3[,1]
t3[,1,1]
t3[,1,]
t3[1,1,1]
t3[,1,1]
t3[,1,]
t3[,,]
t3[,2,]
dimnames(HairEyeColor)
dimnames['Red',,'Male']
dimnames['Red', ,'Male']
dimnames[, ,'Male']
HairEyeColor["Red", , "Male"]
prop.table(HairEyeColor,2)
prop.table(HairEyeColor[,,"Male"],2)
prop.table(HairEyeColor["Red",,"Male"],2)
prop.table(HairEyeColor["Red", ,"Male"],2)
prop.table(HairEyeColor[,"Red" ,"Male"],2)
prop.table(HairEyeColor[,,"Male"],2)
prop.table(HairEyeColor[,"Blue","Male"],2)
HairEyeColor[,"Blue", "Male"]
a <- HairEyeColor[,"Blue", "Male"]
prop.table(HairEyeColor[,"Blue","Male"],1)
prop.table(a)
prop.table(a["Red"])
prop.table(a,1)
prop.table(a,2)
prop.table(a)
c <- prop.table(a)
c
c["red"]
c
c[3]
c[3]*100
a <- HairEyeColor['Red',"Blue", "Male"]
a
a <- HairEyeColor[,"Blue", "Male"]
c <- prop.table(a)
c[3]*100
c[,3]*100
c[3,]*100
c[]
dim[c]
c[3]
dim[c]
dim[a]
c <- prop.table(a)
c
c["Red"]
c["Red",]
c[,"Red"]
q <-c["Red"]*100
q
q <- c["Red"][0]
q
q
q <- c["Red"][1]
q
q <- c[0][1]
q
q <- c[3][1]
q
q <- c[1,]
q <- c[,1]
prop.table(HairEyeColor,2)
prop.table(HairEyeColor[,'Blue', 'Male'])
prop.table(HairEyeColor[,'Blue', 'Male'] x = 'Red')
prop.table(HairEyeColor[,'Blue', 'Male'])
prop.table(HairEyeColor[,"Blue","Male"],1)
prop.table(HairEyeColor['Red','Blue', 'Male'])
prop.table(HairEyeColor[,'Blue', 'Male'])
prop.table(HairEyeColor[,'Blue', 'Male'])
a <- prop.table(HairEyeColor[,'Blue', 'Male'])
a['Red']
a['Red'] * 100
a['Red'] * 100
a['Red'] * 100[0]
a['Red'] * 100[1]
?a['Red'] * 100
tail(a)
a['Red'] * 100
a['Red'] * 100
a['Red']
#2.2.2
length(prop.table(HairEyeColor['Green',,'Female']))
#2.2.2
(prop.table(HairEyeColor['Green',,'Female']))
#2.2.2
prop.table(HairEyeColor['Green',,'Female'])
#2.2.2
prop.table(HairEyeColor[])
#2.2.2
prop.table(HairEyeColor[,,'Female'])
#2.2.2
HairEyeColor["Grenn",, "Female"]
#2.2.2
HairEyeColor["Green",, "Female"]
#2.2.2
HairEyeColor[,, "Female"]
#2.2.2
HairEyeColor[ ,"Green", "Female"]
#2.2.2
length(HairEyeColor[ ,"Green", "Female"])
#2.2.2
HairEyeColor[ ,"Green", "Female"]
print(i)
for (i in a) {
print(i)
}
for (i in a) {
print(i)
}
a[1]
dim(a)
#2.2.2
a <- HairEyeColor[ ,"Green", "Female"]
a
length(a)
barplot(t1)
barplot(t2)
barplot(t2, legend.text = TRUE, args.legend = lict(x = 'topright')
barplot(t2, legend.text = TRUE, args.legend = lict(x = 'topright'))
barplot(t2, legend.text = TRUE, args.legend = lict(x = 'topright'))
barplot(t2, legend.text = TRUE, args.legend = list(x = 'topright'))
barplot(t2, legend.text = TRUE, args.legend = list(x = 'topright'), beside = T)
mosaicplot(t2)
a <- read.table("dataset_11504_15.txt")
t.test(a$V1 ,a$V2, var.equal= TRUE)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2)
a <- read.table("dataset_11504_15.txt")
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2)
a <- read.table("dataset_11504_16.txt")
t.test(a$V1 ,a$V2)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ,a$V2, var.equal = T)
a <- read.table("dataset_11504_15.txt")
bartlett.test(V1 ~ V2, a)
t.test(a$V1 ~ a$V2, var.equal = T)
